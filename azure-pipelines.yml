# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:DesktopBuildPackageLocation="$(build.artifactStagingDirectory)\WebApp.zip" /p:DeployIisAppPath="Default Web Site"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'



- task: CmdLine@2
  displayName: 发布
  inputs:
    script: |
      dotnet publish -c Release
      dir D:\a\1\s\Route.Generator\bin\Release\netcoreapp2.2\publish\

- task: ArchiveFiles@2
  displayName: 压缩文件
  inputs:
    rootFolderOrFile: '$(Build.BinariesDirectory)'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: FtpUpload@2
  displayName: FTP上传文件
  inputs:
    credentialsOption: 'inputs'
    serverUrl: 'file://47.105.214.235/wwwroot/'
    username: 'administrator'
    password: '931592457czA'
    rootDirectory: 'd:\a\1\a\'
    filePatterns: '*.zip'
    remoteDirectory: '/Route.Generator/$(Build.BuildId)/'
    clean: false
    cleanContents: false
    preservePaths: false
    trustSSL: false

- task: DotNetCoreCLI@2
  displayName: 测试
  inputs:
    command: 'test'

- task: CmdLine@2
  displayName: 提交生成代码
  inputs:
    script: |
      cd D:\a\1\s\Route.Generator
      git push

